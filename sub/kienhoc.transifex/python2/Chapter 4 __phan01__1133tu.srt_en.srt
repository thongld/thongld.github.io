1
00:00:00,000 --> 00:00:00,500
https://youtu.be/Wdi6lhcrtBU

2
00:00:00,500 --> 00:00:04,910
Hello, and welcome to Chapter
4, Functions, in my book Python

3
00:00:04,910 --> 00:00:06,920
for Informatics.

4
00:00:06,920 --> 00:00:10,260
As always, these slides and
this audio and this video

5
00:00:10,260 --> 00:00:14,590
are copyright Creative
Commons attribution.

6
00:00:14,590 --> 00:00:17,370
Now, we are to the point--
you know, in Chapter 4,

7
00:00:17,370 --> 00:00:19,260
we're sort of well
into the class--

8
00:00:19,260 --> 00:00:22,680
so I figure I should
introduce myself a little bit,

9
00:00:22,680 --> 00:00:24,870
let you know a little bit.

10
00:00:24,870 --> 00:00:29,770
As I said before, I
think in the beginning

11
00:00:29,770 --> 00:00:32,400
I'm taping this in
a wonderful building

12
00:00:32,400 --> 00:00:35,710
at the University of
Michigan called North Quad.

13
00:00:35,710 --> 00:00:37,600
It's a relatively new building.

14
00:00:37,600 --> 00:00:41,000
It's got some
residential sections

15
00:00:41,000 --> 00:00:43,710
and some academic sections
and some classrooms.

16
00:00:43,710 --> 00:00:45,910
And one of the classrooms
that I typically teach in

17
00:00:45,910 --> 00:00:49,185
is actually 2255 North Quad.

18
00:00:49,185 --> 00:00:51,570
It's a really beautiful
room with great ways

19
00:00:51,570 --> 00:00:53,180
for people to interact.

20
00:00:53,180 --> 00:00:57,170
And so sometimes I'm teaching,
you know, little tiny Dr. Chuck

21
00:00:57,170 --> 00:01:00,900
down here, with a
smile on the face.

22
00:01:00,900 --> 00:01:04,660
And sometimes, my students are
taking my classes on campus.

23
00:01:04,660 --> 00:01:11,310
And sometimes, students are
watching me through a lecture.

24
00:01:11,310 --> 00:01:13,569
And so this building
is really beautiful.

25
00:01:13,569 --> 00:01:15,610
And if you ever get a
chance to come to Ann Arbor

26
00:01:15,610 --> 00:01:17,484
and take a look at it,
maybe walk through it,

27
00:01:17,484 --> 00:01:19,130
it's really quite nice.

28
00:01:19,130 --> 00:01:20,770
One of the things
I like about it

29
00:01:20,770 --> 00:01:23,560
is that I think
it's really highly

30
00:01:23,560 --> 00:01:27,700
inspired by Harry Potter.

31
00:01:27,700 --> 00:01:30,930
Of course, Oxford and Cambridge
are the real inspiration

32
00:01:30,930 --> 00:01:31,690
for Harry Potter.

33
00:01:31,690 --> 00:01:36,140
But our cafeteria, for
example, it kind of

34
00:01:36,140 --> 00:01:39,550
looks like the four
tables in Hogwarts.

35
00:01:39,550 --> 00:01:42,330
And you can kind of imagine
a snowy owl flying around

36
00:01:42,330 --> 00:01:47,010
and a Sorting Hat at the
front sorting people.

37
00:01:47,010 --> 00:01:50,545
And so the nickname
for the place

38
00:01:50,545 --> 00:01:54,590
is Quad-warts, because
it's North Quad.

39
00:01:54,590 --> 00:01:59,210
Quad-warts, that's like
Hogwarts and North Quad kind of

40
00:01:59,210 --> 00:01:59,950
jammed together.

41
00:01:59,950 --> 00:02:02,630
And of course, given that we
sort of think of ourselves

42
00:02:02,630 --> 00:02:07,320
a little bit as Harry Potter,
people when they first

43
00:02:07,320 --> 00:02:12,870
come in September, often sort
of decide to sort themselves.

44
00:02:12,870 --> 00:02:17,070
And a few years back, when we
first started the building,

45
00:02:17,070 --> 00:02:21,684
the students decided that I did
not get to be in Gryffindor.

46
00:02:21,684 --> 00:02:23,600
As a matter of fact,
it's probably time for me

47
00:02:23,600 --> 00:02:27,930
to show you who I am and
who I've been sorted to be.

48
00:02:27,930 --> 00:02:31,630
So the students decided that
I couldn't be in Gryffindor,

49
00:02:31,630 --> 00:02:34,100
but I had to be in Slytherin.

50
00:02:34,100 --> 00:02:36,600
And that's because of my
name, Charles Severance,

51
00:02:36,600 --> 00:02:39,210
and Severus Snape.

52
00:02:39,210 --> 00:02:43,310
What's even cooler, of course,
is given that I teach Python,

53
00:02:43,310 --> 00:02:48,080
Slytherin's House is a snake.

54
00:02:48,080 --> 00:02:49,890
So it makes a lot of sense.

55
00:02:49,890 --> 00:02:53,860
They even have this really
fancy Slytherin teacup

56
00:02:53,860 --> 00:02:56,097
that I use to drink
tea during lectures.

57
00:02:56,097 --> 00:02:57,180
Sometimes, I drink coffee.

58
00:02:57,180 --> 00:02:59,000
Sometimes, I drink tea.

59
00:02:59,000 --> 00:02:59,500
Wow.

60
00:02:59,500 --> 00:03:00,250
This thing itches.

61
00:03:00,250 --> 00:03:02,164
So let me just get rid of it.

62
00:03:02,164 --> 00:03:04,080
If I had any hair, that
would mess my hair up.

63
00:03:04,080 --> 00:03:06,330
So let me get rid of this
for the rest of the lecture.

64
00:03:06,330 --> 00:03:08,838

65
00:03:08,838 --> 00:03:10,770
So there I am.

66
00:03:10,770 --> 00:03:11,270
OK.

67
00:03:11,270 --> 00:03:12,770
Enough of that.

68
00:03:12,770 --> 00:03:17,370
Back to Dr. Chuck.

69
00:03:17,370 --> 00:03:22,050
So with that sort
of brief interlude,

70
00:03:22,050 --> 00:03:27,610
the actual topic of this
lecture is functions.

71
00:03:27,610 --> 00:03:31,370
And so storing and
reusing is basically

72
00:03:31,370 --> 00:03:36,550
an idea that we will often
have a series of steps

73
00:03:36,550 --> 00:03:39,760
that we will want to use
over and over in a program,

74
00:03:39,760 --> 00:03:41,870
increasingly complex.

75
00:03:41,870 --> 00:03:43,370
The things we'll
use in this lecture

76
00:03:43,370 --> 00:03:45,660
are kind of silly,
because I have

77
00:03:45,660 --> 00:03:48,200
to keep them short so the
slides don't get too long.

78
00:03:48,200 --> 00:03:51,160
But a good example
of the kind of work

79
00:03:51,160 --> 00:03:56,290
is maybe I'm going to use
Google's geocoding service.

80
00:03:56,290 --> 00:04:00,440
And I'm going to send some
unstructured data back and get

81
00:04:00,440 --> 00:04:02,452
a GPS coordinate back.

82
00:04:02,452 --> 00:04:04,160
And that's a service
that I want to call.

83
00:04:04,160 --> 00:04:07,169
And it would maybe be about
this many lines of code.

84
00:04:07,169 --> 00:04:09,210
And I'm going to want to
that all over the place.

85
00:04:09,210 --> 00:04:11,790
So do I want to put
this many lines of code

86
00:04:11,790 --> 00:04:13,570
40 places in my program?

87
00:04:13,570 --> 00:04:15,610
Or do I want to put
it one place and then

88
00:04:15,610 --> 00:04:18,260
call it in the various
places that I need it?

89
00:04:18,260 --> 00:04:22,320
And so that's why I call it the
store and the reuse function.

90
00:04:22,320 --> 00:04:27,514
So if we take a look at
the simple syntax here,

91
00:04:27,514 --> 00:04:28,930
these things are
called functions.

92
00:04:28,930 --> 00:04:31,770
In some languages, they're
called subprograms.

93
00:04:31,770 --> 00:04:36,080
But we call them
functions in Python.

94
00:04:36,080 --> 00:04:38,910
And the keyword that we're
really going to focus on

95
00:04:38,910 --> 00:04:41,590
is def, which stands for define.

96
00:04:41,590 --> 00:04:47,380
And what happens here is when
Python sees this def keyword,

97
00:04:47,380 --> 00:04:50,230
it actually doesn't
run the code.

98
00:04:50,230 --> 00:04:52,430
It says, oh, you're
going to make a function.

99
00:04:52,430 --> 00:04:55,040
And you're going to
turn on a recorder

100
00:04:55,040 --> 00:04:57,170
and start recording this code.

101
00:04:57,170 --> 00:04:58,740
So it has a colon
at the end of it.

102
00:04:58,740 --> 00:05:01,030
So it has an indented
block afterwards.

103
00:05:01,030 --> 00:05:05,190
And so the indented
block becomes recorded.

104
00:05:05,190 --> 00:05:07,450
So instead of running
the code, like if we just

105
00:05:07,450 --> 00:05:09,850
put print "Hello" and print
find: Fun," it would run it.

106
00:05:09,850 --> 00:05:13,300
But instead says, hey,
don't run it right now.

107
00:05:13,300 --> 00:05:14,620
Name it, "hello."

108
00:05:14,620 --> 00:05:15,630
We give it a name.

109
00:05:15,630 --> 00:05:16,940
It's kind like a variable.

110
00:05:16,940 --> 00:05:18,210
We choose the name.

111
00:05:18,210 --> 00:05:21,310
We've chosen hello
as the name of this.

112
00:05:21,310 --> 00:05:22,910
Define it as hello.

113
00:05:22,910 --> 00:05:25,360
Have it have these two
lines of Python in it.

114
00:05:25,360 --> 00:05:27,880
And we'll use it later.

115
00:05:27,880 --> 00:05:29,770
And so that's the
function definition.

116
00:05:29,770 --> 00:05:32,020
That's the store phase.

117
00:05:32,020 --> 00:05:34,550
It's sort of like it doesn't
really run those lines.

118
00:05:34,550 --> 00:05:36,360
It sort of makes
a variable called

119
00:05:36,360 --> 00:05:40,080
hello that actually
contains Python code rather

120
00:05:40,080 --> 00:05:42,770
than containing 12 or
a string or something

121
00:05:42,770 --> 00:05:45,310
like that we've
worked with before.

122
00:05:45,310 --> 00:05:46,690
So this is the store part.

123
00:05:46,690 --> 00:05:50,260
And then, the reuse part is
we then have extended Python.

124
00:05:50,260 --> 00:05:53,740
We now can call our bit of code.

125
00:05:53,740 --> 00:05:56,240
So we say, hello--
hello name is what

126
00:05:56,240 --> 00:05:58,250
we came up with-- parentheses.

127
00:05:58,250 --> 00:06:00,270
And then, that says--
remember that code

128
00:06:00,270 --> 00:06:02,690
that I put in there
under the name hello?

129
00:06:02,690 --> 00:06:03,990
Run it now.

130
00:06:03,990 --> 00:06:07,030
And so if I start
looking at that and then

131
00:06:07,030 --> 00:06:08,630
it just continues.

132
00:06:08,630 --> 00:06:11,440
So let me clear this
and start over again.

133
00:06:11,440 --> 00:06:14,540
And so if I watch what Python
does from the beginning

134
00:06:14,540 --> 00:06:16,260
as it reads here
and goes, oh, you're

135
00:06:16,260 --> 00:06:18,130
defining a function named hello.

136
00:06:18,130 --> 00:06:18,750
Great.

137
00:06:18,750 --> 00:06:22,095
I will remember, remember.

138
00:06:22,095 --> 00:06:23,790
I've got that
remembered for you.

139
00:06:23,790 --> 00:06:24,680
Let's continue on.

140
00:06:24,680 --> 00:06:25,750
Oh, hello.

141
00:06:25,750 --> 00:06:28,260
You want me to run that
stuff that you just got done

142
00:06:28,260 --> 00:06:30,280
storing under the name hello.

143
00:06:30,280 --> 00:06:31,870
So then, it kind of
goes and runs it.

144
00:06:31,870 --> 00:06:34,310
And out comes Hello, Fun.

145
00:06:34,310 --> 00:06:36,640
Then after that, it
runs to this print,

146
00:06:36,640 --> 00:06:38,587
and then out comes print Zip.

147
00:06:38,587 --> 00:06:40,920
Then, we say, you know what,
I want to reuse that again.

148
00:06:40,920 --> 00:06:41,790
I stored it once.

149
00:06:41,790 --> 00:06:44,120
I can resue it as
many times as I want.

150
00:06:44,120 --> 00:06:45,440
And now, hello.

151
00:06:45,440 --> 00:06:48,790
And then, these two lines
of code run a second time.

152
00:06:48,790 --> 00:06:51,430
So we stored once,
gave them a name,

153
00:06:51,430 --> 00:06:54,490
and then ran them
twice in the context

154
00:06:54,490 --> 00:06:55,760
of wherever it is we wanted.

