155
00:06:55,760 --> 00:07:02,220
quangdutran 01/06/2016 Thao reviewed
Trường hợp này không cần thiết 

156
00:07:02,220 --> 00:07:02,970
phải làm vậy.

157
00:07:02,970 --> 00:07:05,011
Tôi chỉ muốn bạn chú ý rằng

158
00:07:05,011 --> 00:07:07,750
có một cách để lưu và đặt tên cho một đoạn mã

159
00:07:07,750 --> 00:07:08,980
để có thể sử dụng sau này.

160
00:07:08,980 --> 00:07:11,161
Đó là điều tôi muốn nói.

161
00:07:11,161 --> 00:07:13,285
Có hai loại hàm trong Python.

162
00:07:13,285 --> 00:07:15,140
Ta đã sử dụng chúng

163
00:07:15,140 --> 00:07:16,776
từ những bài giảng đầu.

164
00:07:16,776 --> 00:07:18,400
Đó là những hàm được dựng sẵn

165
00:07:18,400 --> 00:07:23,470
mà Python cung cấp như

166
00:07:23,470 --> 00:07:24,890
float, raw_input, hay int.

167
00:07:24,890 --> 00:07:28,170
Chúng là một phần của Python
nhưng ta gọi chúng là hàm.

168
00:07:28,170 --> 00:07:29,840
Điểm khác là ta 
không viết những hàm đó.

169
00:07:29,840 --> 00:07:31,548
Tiếp theo là hàm 
được định nghĩa bởi người dùng

170
00:07:31,548 --> 00:07:33,290
hàm mà ta viết,

171
00:07:33,290 --> 00:07:36,330
để thực hiện chức năng mà ta muốn


172
00:07:36,330 --> 00:07:39,310
sử dụng, 
ví dụ như hàm tính toán

173
00:07:39,310 --> 00:07:42,790
mức lương trả cho
nhân viên làm ngoài giờ.

174
00:07:42,790 --> 00:07:46,130
Chúng ta đặt tên cho các hàm này

175
00:07:46,130 --> 00:07:47,940
và dùng chúng như những 
từ dành riêng ta tự tạo ra.

176
00:07:47,940 --> 00:07:50,580
Chúng giống như 
phần mở rộng cho ngôn ngữ lập trình.

177
00:07:50,580 --> 00:07:53,550

178
00:07:53,550 --> 00:07:57,370
Chúng ta định nghĩa một hàm

179
00:07:57,370 --> 00:07:58,790
với từ khóa "def".

180
00:07:58,790 --> 00:08:02,039
"def" là một từ dành riêng.

181
00:08:02,039 --> 00:08:04,330
Nó giống như các từ khóa khác 
trong chương 1

182
00:08:04,330 --> 00:08:05,320
mà ta đã bàn tới.

183
00:08:05,320 --> 00:08:08,630
Python sẽ biết đằng sau "def" là một hàm.

184
00:08:08,630 --> 00:08:09,520
Ta sẽ định nghĩa hàm đó.

185
00:08:09,520 --> 00:08:12,660
Và khi ta gọi hàm đó ra dùng,
chuyên ngành gọi là "invoke".

186
00:08:12,660 --> 00:08:15,600
Ta vừa mới dựng nó lên xong,
sau đó thì gọi đến nó.

187
00:08:15,600 --> 00:08:17,540
Bạn có thể dựng hàm một lần 
rồi invoke nó

188
00:08:17,540 --> 00:08:20,300
rất nhiều lần sau đó.

189
00:08:20,300 --> 00:08:23,450
Ví dụ, 
đây là một hàm dựng sẵn

190
00:08:23,450 --> 00:08:26,180
gọi là "max",
nó sẽ tìm kí tự

191
00:08:26,180 --> 00:08:29,540
nằm xa nhất trong bảng chữ cái

192
00:08:29,540 --> 00:08:31,650
trong một chuỗi kí tự.

193
00:08:31,650 --> 00:08:35,690
Cho tôi biết kí tự lớn nhất.

194
00:08:35,690 --> 00:08:37,720
Hàm "max" không phải 
do ta viết.

195
00:08:37,720 --> 00:08:40,380
Mà ta đang gọi đến hàm đó.

196
00:08:40,380 --> 00:08:43,380
Và chúng ta sẽ 
đẩy một biến vào hàm.

197
00:08:43,380 --> 00:08:47,900
Biến nằm ở giữa hai dấu ngoặc.

198
00:08:47,900 --> 00:08:49,970
Hàm "max" có thể 
tìm được giá trị lớn nhất

199
00:08:49,970 --> 00:08:51,350
của nhiều thứ khác nhau.

200
00:08:51,350 --> 00:08:52,740
Lúc này, ta muốn tìm

201
00:08:52,740 --> 00:08:56,360
kí tự lớn nhất, có vị trí cao nhất

202
00:08:56,360 --> 00:08:58,210
trong chuỗi kí tự này.

203
00:08:58,210 --> 00:09:01,760
Đây là vế phải của một 
câu lệnh gán giá trị

204
00:09:01,760 --> 00:09:06,382
cho nên nó phải tính toán 
rồi trả về một giá trị.

205
00:09:06,382 --> 00:09:08,590
Biến đi vào trong hàm
rồi hàm tính toán

206
00:09:08,590 --> 00:09:10,180
theo công thức.

207
00:09:10,180 --> 00:09:12,500
Sau đó hàm sẽ trả 
cho ta một giá trị

208
00:09:12,500 --> 00:09:17,130
kết quả của hàm max('Hello World')

209
00:09:17,130 --> 00:09:20,540
Và trong trường hợp này
giá trị đó là chữ w.

210
00:09:20,540 --> 00:09:23,360
Vì chữ w được coi là 
kí tự có vị trí cao nhất,

211
00:09:23,360 --> 00:09:26,090
và đó là 
giá trị hàm "max" trả về.

212
00:09:26,090 --> 00:09:28,370
Xong phần đó, tiếp theo

213
00:09:28,370 --> 00:09:30,506
chữ w được gán vào biến.

214
00:09:30,506 --> 00:09:31,880
Câu lệnh gán kết thúc.

215
00:09:31,880 --> 00:09:34,450
Bạn có thể thấy 
là hàm tính toán 

216
00:09:34,450 --> 00:09:38,180
là một phần của vế phải 

217
00:09:38,180 --> 00:09:38,820
của câu lệnh.

218
00:09:38,820 --> 00:09:40,880
Có thể có thêm
cộng gì đó ở phía sau.

219
00:09:40,880 --> 00:09:43,040
Có thể câu lệnh sẽ phức tạp hơn nhiều.

220
00:09:43,040 --> 00:09:45,740
Nhưng ở đây thì chỉ là

221
00:09:45,740 --> 00:09:48,530
một câu gọi hàm đơn giản.

222
00:09:48,530 --> 00:09:50,890
Nhìn vào hàm này,
ta thấy phải có code ở đâu đó.

223
00:09:50,890 --> 00:09:52,940
Đã có ai đó viết code cho hàm này.

224
00:09:52,940 --> 00:09:54,510
Đó là một phần của Python.

225
00:09:54,510 --> 00:09:55,710
Bạn không phải là người viết nó.

226
00:09:55,710 --> 00:09:57,950
Hàm max này 
được viết ở đâu đó.

227
00:09:57,950 --> 00:10:00,210
Bạn cứ hình dung là hàm lấy biến vào,

228
00:10:00,210 --> 00:10:01,940
kiểu như một chương trình vậy.

229
00:10:01,940 --> 00:10:04,930
Vì vậy nên một số ngôn ngữ
gọi hàm là chương trình con.

230
00:10:04,930 --> 00:10:08,120
Vì hàm lấy vào biến,
nó sẽ xử lí biến đầu vào

231
00:10:08,120 --> 00:10:10,240
theo những gì nó đã được định nghĩa.

232
00:10:10,240 --> 00:10:13,260
Sau đó nó trả về một giá trị.

233
00:10:13,260 --> 00:10:16,420
"Hello World" là đầu vào,
một chuỗi kí tự

234
00:10:16,420 --> 00:10:17,890
mà chúng ta truyền vào.

235
00:10:17,890 --> 00:10:20,850
Chuỗi "Hello World" là biến 
mà ta nhét vào hàm.

236
00:10:20,850 --> 00:10:22,610
Hàm bắt đầu chạy.

237
00:10:22,610 --> 00:10:25,550
Và nó trả về kết quả.

238
00:10:25,550 --> 00:10:31,090
Vậy hàm có đầu vào,
xử lí rồi trả về kết quả.

239
00:10:31,090 --> 00:10:33,770
Đó là cách hoạt động của hàm,
một đoạn code được viết sẵn,

240
00:10:33,770 --> 00:10:37,030
dù là ai viết,
chúng đều hoạt động như nhau

241
00:10:37,030 --> 00:10:38,930
khi mà ta gọi hàm.

242
00:10:38,930 --> 00:10:43,110
Bạn hãy nghĩ là ở đâu đó trong 
thư viện của Python

243
00:10:43,110 --> 00:10:46,640
có một đoạn mã chứa def.

244
00:10:46,640 --> 00:10:49,400
Và hàm đó có tên là "max".

245
00:10:49,400 --> 00:10:51,340
Nó lấy vào một tham số.

246
00:10:51,340 --> 00:10:55,430
Và nó xử lí biến đầu vào

247
00:10:55,430 --> 00:10:56,550
qua nhiều bước.

248
00:10:56,550 --> 00:10:58,960
Làm đúng theo định nghĩa hàm max.

249
00:10:58,960 --> 00:11:01,750
Hàm "max" sẽ thực hiện 
những gì mà

250
00:11:01,750 --> 00:11:03,480
nó được quy định phải làm.

251
00:11:03,480 --> 00:11:06,840
Đâu đó ở trong Python cũng có

252
00:11:06,840 --> 00:11:09,250
những dòng code định nghĩa nội dung hàm này

253
00:11:09,250 --> 00:11:12,000
Hàm đó được viết sẵn rồi,
nó nằm trong Python

254
00:11:12,000 --> 00:11:14,820
ta không phải làm gì khác cả.

255
00:11:14,820 --> 00:11:17,000
Một vài hàm được dựng sẵn

256
00:11:17,000 --> 00:11:20,560
mà ta đã sử dụng

257
00:11:20,560 --> 00:11:24,100
ví dụ như float, 
lấy biến đầu vào là gì cũng được

258
00:11:24,100 --> 00:11:29,270
rồi trả về kết quả 
là dạng số thực của đầu vào;

259
00:11:29,270 --> 00:11:32,640
rồi hàm "type", đầu vào là một tham số biến 
hoặc hằng số

260
00:11:32,640 --> 00:11:37,740
và trả về kiểu dữ liệu của đầu vào;
tiếp tục lại hàm float chuyển đổi,

261
00:11:37,740 --> 00:11:38,755
rồi lại "type", rồi "float".

262
00:11:38,755 --> 00:11:41,130
Vậy từ trước đến giờ ta vẫn đang

263
00:11:41,130 --> 00:11:42,070
gọi các hàm.

264
00:11:42,070 --> 00:11:45,610
Chúng nhận giá trị đầu vào,

265
00:11:45,610 --> 00:11:47,780
hàm chạy và rồi trả về cho ta

266
00:11:47,780 --> 00:11:50,380
giá trị kết quả,
sau đó giá trị này được dùng

267
00:11:50,380 --> 00:11:54,060
trong các phép toán 
còn lại ở vế phải.

268
00:11:54,060 --> 00:11:57,180
Bạn có thể coi như
có một quãng tạm dừng

269
00:11:57,180 --> 00:11:59,554
ở vế phải, 
gọi hàm,

270
00:11:59,554 --> 00:12:00,970
lấy được kết quả của hàm

271
00:12:00,970 --> 00:12:02,710
và tiếp tục tính toán

272
00:12:02,710 --> 00:12:05,970
nốt bên vế phải,
tính ra giá trị cuối cùng,

273
00:12:05,970 --> 00:12:09,740
và in giá trị đó ra.

274
00:12:09,740 --> 00:12:13,200
Một điều nữa ta đã làm

275
00:12:13,200 --> 00:12:14,840
là chuyển đổi các chuỗi kí tự.

276
00:12:14,840 --> 00:12:17,250
Ở đây ta đã đổi một chuỗi kí tự 

277
00:12:17,250 --> 00:12:18,480
thành một số nguyên

278
00:12:18,480 --> 00:12:20,170
Đó là dạng dữ liệu của nó.

279
00:12:20,170 --> 00:12:21,940
Chúng ta đổi một chuỗi kí tự
thành một số nguyên.

280
00:12:21,940 --> 00:12:25,500
Hàm sẽ biến đổi đầu vào,
dù nó là dạng gì đi nữa

281
00:12:25,500 --> 00:12:26,580
thành một số nguyên.

282
00:12:26,580 --> 00:12:28,950
Vậy đó là một vài hàm được dựng sẵn

283
00:12:28,950 --> 00:12:31,450
mà ta đã nói tới.

284
00:12:31,450 --> 00:12:36,970
Giờ điều hay là 

285
00:12:36,970 --> 00:12:39,240
ta có thể tự viết hàm.

286
00:12:39,240 --> 00:12:41,800
Túi trà của tôi

287
00:12:41,800 --> 00:12:45,590
rơi vào cốc mất rồi.

288
00:12:45,590 --> 00:12:47,000
Tôi phải bỏ nó ra.

289
00:12:47,000 --> 00:12:48,982
Tôi nghĩ...chà.

290
00:12:48,982 --> 00:12:50,391
Tôi sẽ trở lại ngay.

291
00:12:50,391 --> 00:12:58,247

292
00:12:58,247 --> 00:13:00,211
OK, xong rồi.

293
00:13:00,211 --> 00:13:03,157
Ta muốn tự viết hàm mới.

294
00:13:03,157 --> 00:13:08,580
Như trong ví dụ kia,
ta sử dụng từ khóa "def"

295
00:13:08,580 --> 00:13:12,200
Từ khóa "def" ở đây, rồi đoạn dưới lùi đầu dòng.

296
00:13:12,200 --> 00:13:14,280
Rồi ta đặt một cái tên cho hàm.

297
00:13:14,280 --> 00:13:16,170
Thêm dấu ngoặc.

298
00:13:16,170 --> 00:13:19,230
Dấu ngoặc này là để sau này

299
00:13:19,230 --> 00:13:21,400
đặt biến đầu vào tại đây
nhưng hàm này

300
00:13:21,400 --> 00:13:23,520
không có biến đầu vào nên ta để ngoặc không.

301
00:13:23,520 --> 00:13:25,670
Và sau đó là dấu hai chấm quan trọng.

302
00:13:25,670 --> 00:13:29,670
Nó đánh dấu bắt đầu 
một đoạn lùi đầu dòng trong Python

303
00:13:29,670 --> 00:13:32,460
chính là nội dung của hàm.

304
00:13:32,460 --> 00:13:36,670
Nên nhớ rằng khi 
viết hàm này

305
00:13:36,670 --> 00:13:39,490
khi Python nhìn vào hàm này 
nó sẽ không

306
00:13:39,490 --> 00:13:40,890
thực thi các lệnh này.

307
00:13:40,890 --> 00:13:44,850
Nó chỉ ghi nhớ lại nội dung của hàm và tên hàm print_lyrics.

308
00:13:44,850 --> 00:13:46,830
Vậy nên nó sẽ không 
in ra màn hình,

