535
00:23:07,110 --> 00:23:11,040
NghiaNguyen 23-May-2016 Thao reviewed
Đoạn giữa nói là chạy code 6 lần

536
00:23:11,040 --> 00:23:13,520
tương ứng với mỗi giá trị, rồi in "After".

537
00:23:13,520 --> 00:23:16,160
Ta sẽ thêm 1 số thay đổi 
thông minh vào đoạn đầu,

538
00:23:16,160 --> 00:23:17,910
đoạn giữa,

539
00:23:17,910 --> 00:23:19,870
và đoạn cuối.

540
00:23:19,870 --> 00:23:22,780
Toàn bộ thay đổi này sẽ giúp ta 
đạt được cái mình muốn.

541
00:23:22,780 --> 00:23:26,150
Hiện tại đoạn này còn chưa đủ tính năng.

542
00:23:26,150 --> 00:23:28,990
Bây giờ tôi muốn ôn lại cái ta đã làm.

543
00:23:28,990 --> 00:23:32,001
Các bạn hãy nhớ lấy số có giá trị lớn nhất,

544
00:23:32,001 --> 00:23:33,500
tôi sẽ cho các bạn xem

545
00:23:33,500 --> 00:23:35,750
một dãy số theo trình tự.

546
00:23:35,750 --> 00:23:36,980
Sãn sàng chưa?

547
00:23:36,980 --> 00:23:39,610
Tôi sẽ cho hiện số nhanh thôi 
vì các bạn đã thấy dãy số này rồi.

548
00:23:39,610 --> 00:23:41,650
Tôi sẽ cho các bạn xem từng số một.

549
00:23:41,650 --> 00:23:44,220
Sau đó hãy cho tôi biết 
số nào là lớn nhất.

550
00:23:44,220 --> 00:23:46,460
Nào, bắt đầu.

551
00:23:46,460 --> 00:23:49,100
Số thứ nhất là 9

552
00:23:49,100 --> 00:23:52,210
Số thứ hai là 41

553
00:23:52,210 --> 00:23:54,980
Số thứ ba là 12

554
00:23:54,980 --> 00:23:57,220
Số thứ tư là 3

555
00:23:57,220 --> 00:23:59,970
Số thứ năm là 74

556
00:23:59,970 --> 00:24:03,900
Và số thứ sáu là 15

557
00:24:03,900 --> 00:24:05,850
Vậy số nào là số lớn nhất?

558
00:24:05,850 --> 00:24:09,060

559
00:24:09,060 --> 00:24:13,190
Bạn có phải xem lại không hay là bạn nhớ cách làm rồi?

560
00:24:13,190 --> 00:24:16,150
Tôi gợi ý nhé.

561
00:24:16,150 --> 00:24:18,760
Nó là số 74

562
00:24:18,760 --> 00:24:21,380
Vì tôi biết mà.

563
00:24:21,380 --> 00:24:22,990
Nếu bạn phải nhớ số lớn nhất

564
00:24:22,990 --> 00:24:24,940
trong dãy 20 hay 30 số,
bạn sẽ phải tạo

565
00:24:24,940 --> 00:24:27,270
một thuật toán trong đầu

566
00:24:27,270 --> 00:24:30,010
để tìm số lớn nhất
mà luôn tập trung được.

567
00:24:30,010 --> 00:24:31,150
Chú tâm được.

568
00:24:31,150 --> 00:24:33,900
Bạn sẽ phải hình dung ra một biến gọi là

569
00:24:33,900 --> 00:24:36,229
largest_so_far (lớn nhất cho đến giờ).

570
00:24:36,229 --> 00:24:38,520
Tôi sẽ cho bạn thấy số đầu tiên,
là số 9

571
00:24:38,520 --> 00:24:43,030
Bạn sẽ nghĩ, 9 thì lớn hơn -1

572
00:24:43,030 --> 00:24:44,310
Vậy tôi sẽ lưu nó lại.

573
00:24:44,310 --> 00:24:47,510
Đó là số lớn nhất mà tôi 
thấy cho đến giờ. Tuyệt vời.

574
00:24:47,510 --> 00:24:50,516
Vì nó lớn hơn -1 nhiều.

575
00:24:50,516 --> 00:24:52,300
41, tôi đã tưởng 9 lớn nhất.

576
00:24:52,300 --> 00:24:54,910
Nhưng 41 lớn hơn nhiều.

577
00:24:54,910 --> 00:24:56,670
Vậy, tôi sẽ lưu số đó lại.

578
00:24:56,670 --> 00:24:57,336
Nó lớn nhất.

579
00:24:57,336 --> 00:24:58,810
Nó là số lớn nhất
mà ta thấy cho tới giờ.

580
00:24:58,810 --> 00:25:02,560
Ta mới thấy 2 con số, nhưng số
lớn nhất tính tới bây giờ

581
00:25:02,560 --> 00:25:03,510
là 41

582
00:25:03,510 --> 00:25:05,590
Số 12

583
00:25:05,590 --> 00:25:06,680
Số này không lớn hơn

584
00:25:06,680 --> 00:25:08,500
Ai để ý nó làm gì?

585
00:25:08,500 --> 00:25:11,475
Nó không lớn bằng 41
nên ta lại tiếp tục.

586
00:25:11,475 --> 00:25:12,100
Tiếp theo.

587
00:25:12,100 --> 00:25:13,340
3

588
00:25:13,340 --> 00:25:16,160
Quá nhỏ, mình đang tìm
số lớn nhất cơ mà.

589
00:25:16,160 --> 00:25:16,660
Bỏ qua.

590
00:25:16,660 --> 00:25:18,070
Ồ, 74.

591
00:25:18,070 --> 00:25:19,800
Số gì mà khủng thế.

592
00:25:19,800 --> 00:25:23,120
Đúng là con số lớn nhất mà 
ta thấy cho tới giờ.

593
00:25:23,120 --> 00:25:26,960
Lớn hơn cả nhà vô địch trước đây là 41.

594
00:25:26,960 --> 00:25:28,870
Lớn nhất cho đến giờ.

595
00:25:28,870 --> 00:25:31,260
Giờ ta lưu lại số 74.

596
00:25:31,260 --> 00:25:33,787
Tôi không biết còn bao nhiêu số nữa.

597
00:25:33,787 --> 00:25:34,870
Có thể là còn rất nhiều.

598
00:25:34,870 --> 00:25:38,050
Nhưng số tiếp theo ta thấy là 15.

599
00:25:38,050 --> 00:25:39,640
Số này không đạt điều kiện

600
00:25:39,640 --> 00:25:43,630
Mình có 74 cơ mà, 74 quá tuyệt.

601
00:25:43,630 --> 00:25:45,280
A, hết rồi.

602
00:25:45,280 --> 00:25:46,330
Ta đã xong.

603
00:25:46,330 --> 00:25:50,670
Vậy 74 là nhà vô địch.

604
00:25:50,670 --> 00:25:51,542
Đó là số lớn nhất

605
00:25:51,542 --> 00:25:53,250
Nó không chỉ là largest_so_far nữa

606
00:25:53,250 --> 00:25:57,180
mà hoàn toàn là số

607
00:25:57,180 --> 00:25:58,550
 lớn nhất luôn.

608
00:25:58,550 --> 00:26:00,829
Trở lại, đầu tiên chúng ta có "thing"

609
00:26:00,829 --> 00:26:02,120
vòng lặp ở giữa,

610
00:26:02,120 --> 00:26:04,250
kết quả ở cuối.

611
00:26:04,250 --> 00:26:06,742
Và kết quả này sẽ không xuất hiện 
ở đoạn giữa.

612
00:26:06,742 --> 00:26:09,200
Lúc đó ta còn đang liên tục tìm largest_so_far.

613
00:26:09,200 --> 00:26:11,020
Nhưng ở cuối, khi đã duyệt xong

614
00:26:11,020 --> 00:26:13,280
hết các biến, các giá trị,

615
00:26:13,280 --> 00:26:16,320
thì largest_so_far sẽ chính là số lớn nhất.

616
00:26:16,320 --> 00:26:19,160
Đây là thuật toán 
giải quyết vấn đề này

617
00:26:19,160 --> 00:26:20,420
Tôi có vài biến

618
00:26:20,420 --> 00:26:22,150
Và nhớ rằng 
ký tự gạch dưới "_"

619
00:26:22,150 --> 00:26:25,525
là ký tự hợp lệ trong tên biến

620
00:26:25,525 --> 00:26:28,650
Có vẻ tôi giải thích hơi kỹ quá.

621
00:26:28,650 --> 00:26:31,710
Giờ tôi có 1 biến 
là largest_so_far

622
00:26:31,710 --> 00:26:37,160
Và tôi sẽ gán giá trị của 
biến này là -1

623
00:26:37,160 --> 00:26:39,400
Sau đó tôi in ra "before",
giờ ta thấy largest_so_far

624
00:26:39,400 --> 00:26:42,030
là -1

625
00:26:42,030 --> 00:26:46,082
Kế tiếp chúng ta có một vòng lặp for,
biến vòng lặp là the_num

626
00:26:46,082 --> 00:26:47,790
Giá trị biến sẽ lần lượt là 

627
00:26:47,790 --> 00:26:54,390
9, 41, 12, 3, 74, 15, và
chạy vòng lặp code trong đây.

628
00:26:54,390 --> 00:26:59,440
Vậy, ở vòng đầu tiên.
giá trị the_num sẽ là số 9 

629
00:26:59,440 --> 00:27:03,440
Nếu the_num tức 9, 
lớn hơn largest_so_far

630
00:27:03,440 --> 00:27:11,470
thì gán giá trị the_num
cho largest_so_far

631
00:27:11,470 --> 00:27:14,470
Sau đó cuối mỗi vòng lặp, 
in ra màn hình giá trị largest_so_far

632
00:27:14,470 --> 00:27:15,920
và cả the_num.

633
00:27:15,920 --> 00:27:19,020
Ban đầu the_num là 9

634
00:27:19,020 --> 00:27:22,800
So với -1
thì 9 lớn hơn

635
00:27:22,800 --> 00:27:26,280
Vậy ta đặt giá trị largest_so_far là 9

636
00:27:26,280 --> 00:27:32,700
Tiếp theo, 
the_num là 41.

637
00:27:32,700 --> 00:27:35,780
Ta so sánh 
larget_so_far với 41.

638
00:27:35,780 --> 00:27:38,190
41 lớn hơn, ta lưu nó lại.

639
00:27:38,190 --> 00:27:40,400
Rồi ta chạy tiếp, 
in ra màn hình.

640
00:27:40,400 --> 00:27:43,310
41 là số lớn nhất mà
ta thấy tới giờ

641
00:27:43,310 --> 00:27:44,700
Ta quay lại vòng lặp.

642
00:27:44,700 --> 00:27:47,930
the_num trỏ đến 12,

643
00:27:47,930 --> 00:27:53,650
12 không lớn hơn 41,
ta bỏ qua.

644
00:27:53,650 --> 00:27:58,920
largest_so_far giữ nguyên là 41
ta thấy 12 bên cạnh.

645
00:27:58,920 --> 00:28:03,480
Tương tự, the_num là 3

646
00:28:03,480 --> 00:28:04,630
Ta bỏ qua.

647
00:28:04,630 --> 00:28:08,160
Vậy, ta thấy 3, nhưng 
largest_so_far vẫn là 41.

648
00:28:08,160 --> 00:28:12,170
Tiếp tục, the_num giờ là 74

649
00:28:12,170 --> 00:28:13,070
Nó chạy tiếp.

650
00:28:13,070 --> 00:28:16,940
74 lớn hơn 41

651
00:28:16,940 --> 00:28:18,840
Ta thực thi đoạn code này.

652
00:28:18,840 --> 00:28:23,300
Gán largest_so_far bằng 74.

653
00:28:23,300 --> 00:28:25,140
Theo đó, ta 
in nó ra màn hình.

654
00:28:25,140 --> 00:28:27,580
largest_so_far hiện giờ là 74.

655
00:28:27,580 --> 00:28:29,160
Tiếp tục.

656
00:28:29,160 --> 00:28:30,560
Ta quay lại 1 lần nữa.

657
00:28:30,560 --> 00:28:35,510
the_num trỏ đến 15, nhưng
15 không lớn hơn 74.

658
00:28:35,510 --> 00:28:40,720
Vậy ta bỏ qua, in ra màn hình
15 và 74, sau đó thoát khỏi vòng lặp.

659
00:28:40,720 --> 00:28:45,410
Cuối cùng, ta lấy được giá trị largest_so_far.

660
00:28:45,410 --> 00:28:49,260
Cái tên biến đã không còn ý nghĩa--- 
ý tôi là, largest_so_far cuối cùng này

661
00:28:49,260 --> 00:28:51,610
là giá trị lớn nhất, 
nhưng tên biến vẫn thế.

662
00:28:51,610 --> 00:28:52,990
OK.

663
00:28:52,990 --> 00:28:55,600
Hiểu chưa?

664
00:28:55,600 --> 00:28:57,180
Đấy là một cấu trúc.

665
00:28:57,180 --> 00:29:00,580
Giờ ta sẽ chuyển qua 
1 cấu trúc khác

666
00:29:00,580 --> 00:29:01,292
dùng để đếm.

667
00:29:01,292 --> 00:29:03,250
Ta sẽ làm bao nhiêu việc, chạy vòng lặp

668
00:29:03,250 --> 00:29:05,250
bao nhiêu lần,
hay tìm thấy bao nhiêu thứ

669
00:29:05,250 --> 00:29:06,360
trong vòng lặp này?

670
00:29:06,360 --> 00:29:07,990
Các cách nói đó đều có nghĩa như nhau.

671
00:29:07,990 --> 00:29:10,090
Cấu trúc này
khá là đơn giản.

672
00:29:10,090 --> 00:29:11,657
Chúng ta bắt đầu với biến zork.

673
00:29:11,657 --> 00:29:13,240
Đặt tên biến là "count" (đếm) sẽ hay hơn,

674
00:29:13,240 --> 00:29:15,740
nhưng tôi muốn gọi nó là zork.

675
00:29:15,740 --> 00:29:16,960
Ta có một vòng lặp.

676
00:29:16,960 --> 00:29:19,850
Trong vòng lặp, ta
cộng thêm 1 vào zork.

677
00:29:19,850 --> 00:29:22,444
Cuối cùng,
zork được in ra.

678
00:29:22,444 --> 00:29:24,200
Ở đây đáng lẽ zork phải màu xanh dương.

679
00:29:24,200 --> 00:29:26,507
Zork sẽ là tổng số cần đếm.

680
00:29:26,507 --> 00:29:29,090
Tất nhiên, nhìn vào đây là ta biết
nó bằng 6.

681
00:29:29,090 --> 00:29:31,924
Nhưng giả sử vòng lặp này 
đang lặp qua cả triệu dòng 

682
00:29:31,924 --> 00:29:33,340
trong 1 file thì sao.

683
00:29:33,340 --> 00:29:38,685
Vậy nhìn vào đây để đếm ra 6 là ăn gian rồi. 

684
00:29:38,685 --> 00:29:40,310
Bởi vì ta muốn thực sự tính toán ra nó kia.

685
00:29:40,310 --> 00:29:41,750
Rất đơn giản.

686
00:29:41,750 --> 00:29:43,450
Zork bắt đầu là 0.

687
00:29:43,450 --> 00:29:45,211
Tiếp tục, giờ 
zork là 1.

688
00:29:45,211 --> 00:29:49,420
và 2, 3, 4, 5, 6 và sau đó

689
00:29:49,420 --> 00:29:53,010
hết biến rồi, ta in ra màn hình 6.

690
00:29:53,010 --> 00:29:54,330
Vậy đó là 1 cấu trúc nữa.

691
00:29:54,330 --> 00:29:57,980
Trước, trong và sau vòng lặp.

692
00:29:57,980 --> 00:30:00,110
Ta thêm một chút ở trước, ở giữa.

693
00:30:00,110 --> 00:30:02,910
zork ở đây là

694
00:30:02,910 --> 00:30:05,070
con số ta đã thấy cho tới hiện tại.

695
00:30:05,070 --> 00:30:07,330
Cuối cùng, nó trở thành tổng số.

696
00:30:07,330 --> 00:30:10,090

697
00:30:10,090 --> 00:30:12,387
Tính tổng trong vòng lặp,
khá tương tự.

698
00:30:12,387 --> 00:30:14,220
Các bạn phải hình dung rằng 
ở đây có

699
00:30:14,220 --> 00:30:16,460
rất nhiều biến.

700
00:30:16,460 --> 00:30:18,890
Ta bắt đầu với 1 biến bằng 0.

701
00:30:18,890 --> 00:30:21,180
Mỗi lần lặp, ta 
cộng bất kì

702
00:30:21,180 --> 00:30:22,330
giá trị nào ta đang thấy vào.

703
00:30:22,330 --> 00:30:27,760
Thay vì cộng 1 thì ta
cộng 9, 41, 12, 3, 74, 15.

704
00:30:27,760 --> 00:30:34,460
Có thể coi zork là tổng hiện thời.

705
00:30:34,460 --> 00:30:35,920
Vậy zork là biến tổng hiện thời.

706
00:30:35,920 --> 00:30:39,600
Các bạn có thể thấy tổng hiện thời là 9.

707
00:30:39,600 --> 00:30:43,470
sau đó là 50, rồi 62, 65, 130, 154.

708
00:30:43,470 --> 00:30:46,160
Đến cuối vòng lặp

709
00:30:46,160 --> 00:30:50,280
tổng hiện thời trở thành tổng tất cả.

710
00:30:50,280 --> 00:30:52,850
Đó là 1 dạng cấu trúc khác

711
00:30:52,850 --> 00:30:54,660
mà ta thêm vào đầu,

712
00:30:54,660 --> 00:30:59,200
vào giữa vòng lặp để đạt được một kết quả tốt

